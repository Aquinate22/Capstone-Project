# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15NQ--yi_XPWmZ1m1B2QsZgbP0SxSaUqF
"""

from google.colab import drive
drive.mount('/content/drive')

! pip install streamlit

! pip install --upgrade pip

from keras.models import load_model
import time
import tensorflow as tf
import requests
from io import BytesIO
import numpy as np
from PIL import Image, ImageOps
import streamlit as st



def classify(image, model, class_names ):

  #convert image to (150, 150)
  ImageOps.fit(image, (150,150), Image.Resampling.LANCZOS)

  #convert image to numpy array
  image_array = np.asarray(image)

  #normalize image
  normalized_image_array = (image_array.astype(np.float32)/255.0)

  # set model input
  data = np.ndarray(shape=(1,224,224,3), dtype = np.float32)
  data[0] = normalized_image_array

  #make prediction
  prediction = model.predict(data)
  index = np.argmax(prediction)
  class_name = class_names[index]
  confidence_score = prediction[0][index]

  return class_name, confidence_score

st.title("Breast Cancer Image Classification")

st.markdown("Model loaded using VGG16")

st.caption("Choose an Image")

file = st.file_uploader("Upload image", type = ['jpeg', 'jpg', 'png'])

model = load_model("/content/drive/MyDrive/mammography_images/mammography_images/Model/BC_diagnosis.h5")


st.subheader("Classifying.....")
with st.spinner("Wait for it...."):
    time.sleep(10)

class_names = ["Benign", "Malignant"]


#display the image

if file is not None:
  image = Image.open(file).convert('RGB')
  st.image(image, use_column_width=True)

  class_name, confidence_score = classify(image, model, class_names)

  #write classification
  st.write("##{}".format(class_name))
  st.write("###score{}".format(confidence_score))



